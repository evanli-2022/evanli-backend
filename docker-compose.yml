version: "3"
services:
  evanlidb:
    container_name: evanlidb
    image: library/postgres:14.5
    environment:
      POSTGRES_USER: evanliuser
      POSTGRES_PASSWORD: evanlipassword
      POSTGRES_DB: evanli
    networks:
      - backend
    ports:
      - 5432:5432

  users:
    container_name: evanli-users
    image: eshurupov/evanli-users:1.0
    depends_on:
      - evanlidb
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://evanlidb:5432/evanli
      SPRING_DATASOURCE_USERNAME: evanliuser
      SPRING_DATASOURCE_PASSWORD: evanlipassword
      LIQUIBASE_URL: jdbc:postgresql://evanlidb:5432/evanli
      LIQUIBASE_USER: evanliuser
      LIQUIBASE_PASSWORD: evanlipassword
      CUSTOM_SWAGGER_SERVER_URL: http://localhost
    ports:
      - 8001:8001

  transactions:
    container_name: evanli-transactions
    image: eshurupov/evanli-transactions:1.0
    depends_on:
      - evanlidb
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://evanlidb:5432/evanli
      SPRING_DATASOURCE_USERNAME: evanliuser
      SPRING_DATASOURCE_PASSWORD: evanlipassword
      LIQUIBASE_URL: jdbc:postgresql://evanlidb:5432/evanli
      LIQUIBASE_USER: evanliuser
      LIQUIBASE_PASSWORD: evanlipassword
      AUTH_SERVER: http://evanli-users:8001/api/profile
      CUSTOM_SWAGGER_SERVER_URL: http://localhost
    ports:
      - 8002:8002

  market:
    container_name: evanli-market
    image: eshurupov/evanli-market:1.0
    depends_on:
      - evanlidb
    networks:
      - backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://evanlidb:5432/evanli
      SPRING_DATASOURCE_USERNAME: evanliuser
      SPRING_DATASOURCE_PASSWORD: evanlipassword
      LIQUIBASE_URL: jdbc:postgresql://evanlidb:5432/evanli
      LIQUIBASE_USER: evanliuser
      LIQUIBASE_PASSWORD: evanlipassword
      CUSTOM_SWAGGER_SERVER_URL: http://localhost
    ports:
      - 8003:8003

  balancer:
    build:
      context: ./balancer
    container_name: balancer
    image: balancer:1.0
    depends_on:
      - users
      - transactions
      - market
    ports:
      - 80:80
    networks:
      - backend

networks:
  frontend:
  backend: